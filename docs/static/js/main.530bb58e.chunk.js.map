{"version":3,"sources":["components/Form.js","hooks/useForm.js","helpers/quotation.js","components/Results.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Form","createQuotation","quantityInputs","useState","inputs","setInputs","target","name","value","useForm","brand","year","plan","handleInputChange","reset","error","setError","FormQuotation","onSubmit","ev","preventDefault","trim","price","Date","getFullYear","diffYears","marca","incremento","calcBrands","calcPlans","parseFloat","toFixed","data","quotation","Label","htmlFor","id","Select","onChange","disabled","GroupRadio","Radio","type","checked","Button","Error","memo","styled","form","label","select","div","input","attrs","button","p","Results","ResultsContent","Info","SubTitle","total","h2","props","ResultsMemo","App","setData","useCallback","newData","Container","Title","Content","h1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.530bb58e.chunk.js","sourcesContent":["import { useState, memo } from \"react\";\nimport { func } from \"prop-types\";\nimport styled from \"styled-components\";\nimport { useForm } from \"../hooks/useForm\";\nimport { diffYears, calcBrands, calcPlans } from \"../helpers/quotation\";\n\nexport const Form = ({ createQuotation }) => {\n  const [inputs, handleInputChange, reset] = useForm({\n    brand: \"\",\n    year: \"\",\n    plan: \"\"\n  });\n\n  const [error, setError] = useState(false);\n\n  const { brand, year, plan } = inputs;\n\n  const submit = ev => {\n    ev.preventDefault();\n\n    if (brand.trim() === \"\" || year === \"\" || plan === \"\") {\n      setError(true);\n      return;\n    }\n\n    // Una base de 2000 para iniciar.\n    let price = 2000;\n\n    // Diferencia de años del actual y el año seleccionado.\n    const calcDiffYear = diffYears(year);\n\n    // Porcentaje de valor de la marca.\n    const calcBrand = calcBrands(brand);\n\n    // Porcentaje de valor del plan.\n    const calcPlan = calcPlans(plan);\n\n    // Por cada año hay que restar el 3%\n    price -= (calcDiffYear * 3 * price) / 100;\n\n    // Multiplicar la marca por el precio.\n    price *= calcBrand;\n\n    // Multiplicar el plan por el precio.\n    price *= calcPlan;\n\n    // Se agrega dos decimales al precio y se asegura que se mantenga un número.\n    // Ya que toFixed retorna un string y con parseFloat se convierte a un número.\n    price = parseFloat(price.toFixed(2));\n\n    // Data completa para enviar.\n    const data = {\n      quotation: price,\n      ...inputs\n    };\n\n    createQuotation(data);\n    setError(false);\n    reset();\n  };\n\n  return (\n    <>\n      <FormQuotation onSubmit={submit}>\n        <Label htmlFor=\"brand\" id=\"label-brand\">\n          Marca:\n        </Label>\n        <Select\n          id=\"brand\"\n          name=\"brand\"\n          value={brand}\n          onChange={handleInputChange}\n        >\n          <option value=\"\" disabled>\n            Seleccione marca\n          </option>\n          <option value=\"Americano\">Americano</option>\n          <option value=\"Europeo\">Europeo</option>\n          <option value=\"Asiatico\">Asiatico</option>\n        </Select>\n\n        <Label htmlFor=\"year\" id=\"label-year\">\n          Año:\n        </Label>\n        <Select id=\"year\" name=\"year\" value={year} onChange={handleInputChange}>\n          <option value=\"\" disabled>\n            Seleccione año\n          </option>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n          <option value=\"2018\">2018</option>\n          <option value=\"2017\">2017</option>\n          <option value=\"2016\">2016</option>\n          <option value=\"2015\">2015</option>\n          <option value=\"2014\">2014</option>\n          <option value=\"2013\">2013</option>\n          <option value=\"2012\">2012</option>\n        </Select>\n\n        <GroupRadio>\n          <strong>Plan: </strong>\n          <Radio\n            id=\"basic\"\n            name=\"plan\"\n            type=\"radio\"\n            value=\"Básico\"\n            checked={plan === \"Básico\"}\n            onChange={handleInputChange}\n          />\n          <Label htmlFor=\"basic\" id=\"label-basic\">\n            Básico\n          </Label>\n\n          <Radio\n            id=\"pro\"\n            name=\"plan\"\n            value=\"Pro\"\n            type=\"radio\"\n            checked={plan === \"Pro\"} // name: value | plan: pro -> pro === pro -> true\n            onChange={handleInputChange}\n          />\n          <Label htmlFor=\"pro\" id=\"label-pro\">\n            Pro\n          </Label>\n        </GroupRadio>\n\n        <Button type=\"submit\">Cotizar</Button>\n      </FormQuotation>\n\n      {error && (\n        <Error>Los campos están vacíos, es necesario seleccionarlos</Error>\n      )}\n    </>\n  );\n};\n\nconst FormQuotation = memo(styled.form`\n  display: flex;\n  flex-direction: column;\n`);\n\nconst Label = memo(styled.label`\n  font-weight: bold;\n  margin-right: 10px;\n`);\n\nconst Select = memo(styled.select`\n  width: 100%;\n  padding: 10px;\n  margin: 15px 0;\n`);\n\nconst GroupRadio = memo(styled.div`\n  padding: 5px 0 15px;\n  border-bottom: 1px solid #50c2f9;\n`);\n\nconst Radio = memo(styled.input.attrs(() => ({ type: \"radio\" }))`\n  width: 20px;\n  height: 20px;\n  vertical-align: middle;\n  margin: 0px 10px 5px 10px;\n`);\n\nconst Button = memo(styled.button`\n  border: none;\n  padding: 10px;\n  margin: 10px 0;\n  color: #ffffff;\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: bold;\n  border-radius: 3px;\n  background-color: #50c2f9;\n\n  &:hover {\n    background-color: #81e0ef;\n    transition: background-color 0.5s ease-in-out;\n  }\n`);\n\nconst Error = memo(styled.p`\n  padding: 10px;\n  color: #ffffff;\n  font-weight: bold;\n  text-align: center;\n  border-radius: 3px;\n  background-color: #f95050;\n`);\n\nForm.propTypes = {\n  createQuotation: func.isRequired\n};\n","import { useState } from \"react\";\n\nexport const useForm = (quantityInputs = {}) => {\n  const [inputs, setInputs] = useState(quantityInputs);\n\n  const reset = () => {\n    setInputs(quantityInputs);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setInputs({ ...inputs, [target.name]: target.value });\n  };\n\n  return [inputs, handleInputChange, reset];\n};\n","//* Function diff years.\nexport const diffYears = year => new Date().getFullYear() - year; // 3%\n\n//* Function calc brands.\nexport const calcBrands = marca => {\n  let incremento = 0;\n\n  switch (marca) {\n    case \"Europeo\":\n      incremento = 1.3; // 30%\n      break;\n    case \"Americano\":\n      incremento = 1.15; // 15%\n      break;\n    case \"Asiatico\":\n      incremento = 1.05; // 5%\n      break;\n    default:\n      break;\n  }\n\n  return incremento;\n};\n\n//* Function calc plan.\nexport const calcPlans = plan => (plan === \"Básico\" ? 1.2 : 1.5); // 20% o 50%\n","import { memo } from \"react\";\nimport styled from \"styled-components\";\nimport { shape, number, string } from \"prop-types\";\n\nconst Results = ({ data }) => {\n  return (\n    <ResultsContent>\n      {data.quotation === 0 ? (\n        <Info>\n          <strong>Cargando la data...</strong>\n        </Info>\n      ) : (\n        <>\n          <SubTitle>Resultado de Cotización</SubTitle>\n          <Info>Marca del auto: {data.brand}</Info>\n          <Info>Año del auto: {data.year}</Info>\n          <Info>Plan: {data.plan}</Info>\n          <Info total>El total es: $ {data.quotation}</Info>\n        </>\n      )}\n    </ResultsContent>\n  );\n};\n\nconst ResultsContent = memo(styled.div`\n  padding: 10px;\n  color: #ffffff;\n  text-align: center;\n  border-radius: 3px;\n  background-color: #092837;\n`);\n\nconst SubTitle = memo(styled.h2`\n  margin: 0px 0px 20px;\n`);\n\nconst Info = memo(styled.p`\n  margin: 5px;\n\n  ${props =>\n    props.total &&\n    `\n    padding: 10px;\n    border: 2px solid #ffffff;\n    border-radius: 10px 0px 10px 0px;\n  `}\n`);\n\nResults.propTypes = {\n  data: shape({\n    quotation: number.isRequired,\n    brand: string.isRequired,\n    year: string.isRequired,\n    plan: string.isRequired\n  }).isRequired\n};\n\nconst ResultsMemo = memo(Results);\nexport { ResultsMemo as Results };\n","import { useCallback, useState, memo } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Results } from \"../components/index\";\n\nconst App = () => {\n  const [data, setData] = useState({\n    quotation: 0,\n    brand: \"\",\n    year: \"\",\n    plan: \"\"\n  });\n\n  const createQuotation = useCallback(\n    newData => {\n      setData(newData);\n    },\n    [setData]\n  );\n\n  return (\n    <Container>\n      <Title>Cotizador de Seguros</Title>\n      <Content>\n        <Form createQuotation={createQuotation} />\n        <Results data={data} />\n      </Content>\n    </Container>\n  );\n};\n\nconst Container = memo(styled.div`\n  width: 297px;\n  position: relative;\n  border-radius: 3px;\n  background-color: #ffffff;\n\n  @media screen and (min-width: 375px) {\n    width: 350px;\n  }\n\n  @media screen and (min-width: 600px) {\n    width: 500px;\n  }\n`);\n\nconst Content = memo(styled.div`\n  padding: 20px;\n`);\n\nconst Title = memo(styled.h1`\n  left: 0;\n  top: -21px;\n  width: 100%;\n  position: relative;\n\n  margin: 0;\n  color: #ffffff;\n  padding: 10px 0;\n  text-align: center;\n  background-color: #50c2f9;\n  border-radius: 3px 3px 0px 0px;\n`);\n\nexport { App };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport \"./styles/normalize.css\";\nimport { App } from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}